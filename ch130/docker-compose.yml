services:
  fastapi:
    build:
      context: ./fastapi
    container_name: fastapi
    env_file:
      - ./fastapi/.env
    expose:
      - "8000"
    volumes:
      - ./fastapi:/fastapi
    depends_on:
      - db
    restart: always
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    env_file:
      - ./fastapi/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  reactjs:
    build:
      context: ./reactjs
    container_name: reactjs
    env_file:
      - ./reactjs/.env
    restart: always
    expose:
      - "80"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
      - reactjs
    restart: always
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge